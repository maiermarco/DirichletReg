%\VignetteIndexEntry{DirichletReg -- JSS Sources}
<<echo=FALSE>>=
library(DirichletReg)
@
\documentclass[article]{Z}
\usepackage[latin1]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{amsmath, thumbpdf}
\usepackage{Sweave}
\usepackage{graphicx}

\author{Marco J. Maier\\Wirtschaftsuniversität Wien}
\Plainauthor{Marco J. Maier}

\title{Package Vignette for \pkg{DirichletReg}: JSS Code}
\Plaintitle{Package Vignette for DirichletReg: JSS Code}
%\Shorttitle{The R Package \pkg{eRm}}

\Abstract{
This package vignette contains the full code from the JSS article.

This document was generated using \proglang{R}
\Sexpr{paste(c(version$major,".",version$minor),collapse="")}
\citep{R.two.thirteen.zero} and \pkg{DirichletReg}
\Sexpr{packageVersion("DirichletReg")}.
}
\Keywords{DirichletReg package, Dirichlet regression}

\begin{document}
<<>>=
library(DirichletReg)
head(ArcticLake)
AL <- DR_data(ArcticLake[,1:3])
@


<<>>=
AL
head(getdata(AL),width=15,height=10)
@


<<echo=TRUE,fig=TRUE>>=
plot(AL,reset_par=FALSE)
@


<<echo=TRUE,fig=TRUE>>=
plot(rep(ArcticLake$depth,3),unlist(getdata(AL)),
     pch=21, bg=rep(rainbow_hcl(3),each=39),
     xlab="Depth (m)", ylab="Proportion", ylim=0:1)
@


<<>>=
lake1 <- DirichReg(AL~depth, ArcticLake)
summary(lake1)
@


<<>>=
lake2 <- DirichReg(AL~depth+I(depth^2), ArcticLake)
anova(lake1,lake2)
@


<<>>=
lake2
@


<<echo=TRUE,fig=TRUE>>=
plot(rep(ArcticLake$depth,3),unlist(getdata(AL)),
     pch=21, bg=rep(rainbow_hcl(3),each=39),
     xlab="Depth (m)", ylab="Proportion", ylim=0:1, main="Sediment Composition in an Arctic Lake")
Xnew <- data.frame(depth=seq(min(ArcticLake$depth), max(ArcticLake$depth), length.out=100))
for(i in 1:3)lines(cbind(Xnew, predict(lake2, Xnew)[,i]),col=rainbow_hcl(3)[i],lwd=2)
legend("topleft", legend=c("Sand","Silt","Clay"), lwd=2, col=rainbow_hcl(3), pt.bg=rainbow_hcl(3), pch=21,bty="n")

par(new=TRUE)
plot(cbind(Xnew, predict(lake2, Xnew, F,F,T)), lty="24", type="l",ylim=c(0,max(predict(lake2, Xnew, F,F,T))),axes=F,ann=F,lwd=2)
axis(4)
legend("top",legend=c(expression(hat(alpha)[c]/hat(alpha)[0]==hat(mu[c])),expression(hat(alpha)[0]==hat(phi))),lty=c(1,2),lwd=c(3,2),bty="n")
@


<<fig=TRUE>>=
AL <- DR_data(ArcticLake[,1:3])

dd <- range(ArcticLake$depth)
X <- data.frame(depth=seq(dd[1], dd[2], length.out=200))

pp <- predict(DirichReg(AL~depth+I(depth^2),ArcticLake), X)

plot(AL, cex=.1, reset_par=FALSE)
points(DirichletReg:::coord.trafo(AL$Y[,c(2,3,1)]), pch=16, cex=.5, col=gray(.5))

lines(DirichletReg:::coord.trafo(pp[,c(2,3,1)]), lwd=3, col=rainbow_hcl(2,l=25)[2])

Dols <- log(cbind(ArcticLake[,2]/ArcticLake[,1],
                  ArcticLake[,3]/ArcticLake[,1]))

ols <- lm(Dols~depth+I(depth^2), ArcticLake)
p2 <- predict(ols, X)
p2m <- exp(cbind(0,p2[,1],p2[,2]))/rowSums(exp(cbind(0,p2[,1],p2[,2])))

lines(DirichletReg:::coord.trafo(p2m[,c(2,3,1)]), lwd=3, col=rainbow_hcl(2,l=25)[1], lty="21")
@


<<>>=
B <- DR_data(BloodSamples[1:30, 1:4])
blood1 <- DirichReg(B~Disease|phi~1, BloodSamples)
blood2 <- DirichReg(B~Disease|phi~Disease, BloodSamples)
anova(blood1, blood2)
summary(blood1)
@


<<fig=TRUE>>=
par(mfrow=c(1,4))
for(i in 1:4){
  boxplot(B$Y[,i]~BloodSamples$Disease[1:30], main=paste(names(BloodSamples)[i]), xlab="Disease Type", ylab="Proportion")
  segments(c(-5,1.5),unique(fitted(blood2)[,i]),
           c(1.5,5),unique(fitted(blood2)[,i]),lwd=3,lty=2)
}
@


<<>>=
alpha <- predict(blood2, data.frame(Disease=factor(c("A","B"))), F, T, F)
L <- sapply(1:2, function(i) ddirichlet(DR_data(BloodSamples[31:36,1:4])$Y, unlist(alpha[i,])))
LP <- L / rowSums(L)
dimnames(LP) <- list(paste("C",1:6), c("A", "B"))
print(round(LP * 100, 1),print.gap=2)
@


<<fig=TRUE>>=
B2 <- DR_data(BloodSamples[,c(1,2,4)])
plot(B2, cex=.001, reset_par=FALSE)

div.col <- diverge_hcl(100)
# expected values
temp <- (alpha/rowSums(alpha))[,c(2,4,1)]
points(DirichletReg:::coord.trafo(temp/rowSums(temp)), pch=22, bg=div.col[c(1,100)], cex=1, lwd=.25)
# known values   
temp <- B2$Y[1:30,c(2,3,1)]
points(DirichletReg:::coord.trafo(temp/rowSums(temp)), pch=21, bg=(div.col[c(1,100)])[BloodSamples$Disease[1:30]], cex=.5, lwd=.25)
# unclassified  
temp <- B2$Y[31:36,c(2,3,1)]
points(DirichletReg:::coord.trafo(temp/rowSums(temp)), pch=21, bg=div.col[round(100*LP[,2],0)], cex=0.5, lwd=.5)

legend("topleft", bty="n", legend=c("Disease A","Disease B",NA,"Expected Values"), pch=c(21,21,NA,22), pt.bg=c(div.col[c(1,100)],NA,"white"))
@

                                  
<<>>=
data("ReadingSkills", package="betareg")
acc <- DR_data(ReadingSkills$accuracy)

ReadingSkills$dyslexia <- C(ReadingSkills$dyslexia, treatment)
rs1 <- DirichReg(acc ~ dyslexia*iq | phi~dyslexia*iq, ReadingSkills)
rs2 <- DirichReg(acc ~ dyslexia*iq | phi~dyslexia+iq, ReadingSkills)
anova(rs1,rs2)
@


<<>>=
a <- ReadingSkills$accuracy
logit_a <- log(a/(1-a))
rlr <- lm(logit_a~dyslexia*iq, ReadingSkills)
summary(rlr)
@


<<>>=
summary(rs2)
@


<<fig=TRUE>>=
g.ind <- as.numeric(ReadingSkills$dyslexia)
plot(accuracy~iq, ReadingSkills, pch=21, bg=rainbow_hcl(2)[3-g.ind], cex=1.5, main="Dyslexic (Red) vs. Control (Green) Group",
xlab="IQ Score",ylab="Reading Accuracy")
x <- seq(min(ReadingSkills$iq), max(ReadingSkills$iq), length.out=200)
n <- length(x)
X <- data.frame(dyslexia=rep(c("yes","no"), each=n),iq=c(x,x))
pv <- predict(rs2, X, TRUE, TRUE, TRUE)

lines(x, pv$mu[-(1:n),2], col=rainbow_hcl(2)[2],lwd=3)
lines(x, pv$mu[  1:n ,2], col=rainbow_hcl(2)[1],lwd=3)

olsN <- 1/(1+exp(-predict(rlr, X[-(1:n),])))
olsD <- 1/(1+exp(-predict(rlr, X[  1:n ,])))
lines(x, olsD, col=rainbow_hcl(2,l=50)[1],lwd=3,lty=2)
lines(x, olsN, col=rainbow_hcl(2,l=50)[2],lwd=3,lty=2)

### precision plot
par(new=TRUE)
 plot(x, pv$phi[-(1:n)], col=rainbow_hcl(2,l=25)[2], lty=3, type="l",ylim=c(0,max(pv$phi)),axes=F,ann=F,lwd=2)
lines(x, pv$phi[  1:n ], col=rainbow_hcl(2,l=25)[1], lty=3, type="l",lwd=2)
axis(4)
legend("topleft",legend=c(expression(hat(mu)),expression(hat(phi)),"OLS"),lty=c(1,3,2),lwd=c(3,2,3),bty="n")
@


<<fig=TRUE>>=
gcol <- rainbow_hcl(2)[3-as.numeric(ReadingSkills$dyslexia)]
tmt <- c(-3,3)
par(mfrow=c(3,2))
qqnorm(residuals(rlr,"pearson"), ylim=tmt, xlim=tmt, pch=21, bg=gcol, main="Normal Q\uadQ\uadPlot: OLS Residuals",cex=.75,lwd=.5)
abline(0,1, lwd=2)
qqline(residuals(rlr,"pearson"), lty=2)

qqnorm(residuals(rs2,"standardized")[,2], ylim=tmt, xlim=tmt, pch=21, bg=gcol, main="Normal Q\uadQ\uadPlot: DirichReg Residuals",cex=.75,lwd=.5)
abline(0,1, lwd=2)
qqline(residuals(rs2,"standardized")[,2], lty=2)

plot(ReadingSkills$iq, residuals(rlr,"pearson"), pch=21, bg=gcol, ylim=c(-3,3),main="OLS Residuals",xlab="IQ",ylab="Pearson Residuals",cex=.75,lwd=.5)
abline(h=0,lty=2)
lines(smooth.spline(ReadingSkills$iq, residuals(rlr,"pearson")))
plot(ReadingSkills$iq, residuals(rs2,"standardized")[,2], pch=21, bg=gcol ,ylim=c(-3,3),main="DirichReg Residuals",xlab="IQ",ylab="Standardized Residuals",cex=.75,lwd=.5)
abline(h=0,lty=2)
lines(smooth.spline(ReadingSkills$iq, residuals(rs2,"standardized")[,2]))

plot(fitted(rlr), residuals(rlr,"pearson"), pch=21, bg=gcol ,ylim=c(-3,3),main="OLS Residuals",xlab="Fitted",ylab="Pearson Residuals",cex=.75,lwd=.5)
abline(h=0,lty=2)
lines(smooth.spline(fitted(rlr), residuals(rlr,"pearson")))
plot(fitted(rs2)[,2], residuals(rs2,"standardized")[,2], pch=21, bg=gcol ,ylim=c(-3,3),main="DirichReg Residuals",xlab="Fitted",ylab="Standardized Residuals",cex=.75,lwd=.5)
abline(h=0,lty=2)
lines(smooth.spline(fitted(rs2)[,2], residuals(rs2,"standardized")[,2]))
@


<<fig=TRUE>>=
g.ind <- as.numeric(ReadingSkills$dyslexia)
g1 <- g.ind == 1   # normal
g2 <- g.ind != 1   # dyslexia
plot(accuracy~iq, ReadingSkills, pch=21, bg=rainbow_hcl(2)[3-g.ind], cex=1.5, main="Dyslexic (Red) vs. Control (Green) Group",
xlab="IQ Score",ylab="Reading Accuracy", xlim=range(ReadingSkills$iq))

x1 <- seq(min(ReadingSkills$iq[g1]), max(ReadingSkills$iq[g1]), length.out=200)
x2 <- seq(min(ReadingSkills$iq[g2]), max(ReadingSkills$iq[g2]), length.out=200)
n <- length(x1)
X1 <- data.frame(dyslexia=factor(rep(0, n), levels=0:1, labels=c("no", "yes")),iq=x1)
X2 <- data.frame(dyslexia=factor(rep(1, n), levels=0:1, labels=c("no", "yes")),iq=x2)
pv1 <- predict(rs2, X1, TRUE, TRUE, TRUE)
pv2 <- predict(rs2, X2, TRUE, TRUE, TRUE)

lines(x1, pv1$mu[,2], col=rainbow_hcl(2)[2],lwd=3)
lines(x2, pv2$mu[,2], col=rainbow_hcl(2)[1],lwd=3)

olsN <- 1/(1+exp(-predict(rlr, X1)))
olsD <- 1/(1+exp(-predict(rlr, X2)))
lines(x2, olsD, col=rainbow_hcl(2,l=50)[1],lwd=3,lty=2)
lines(x1, olsN, col=rainbow_hcl(2,l=50)[2],lwd=3,lty=2)

### precision plot
par(new=TRUE)
 plot(x1, pv1$phi, col=rainbow_hcl(2,l=25)[2], lty="11", type="l",ylim=c(0,max(pv2$phi)),axes=F,ann=F,lwd=2, xlim=range(ReadingSkills$iq))
lines(x2, pv2$phi, col=rainbow_hcl(2,l=25)[1], lty="11", type="l",lwd=2)
axis(4)
legend("topleft",legend=c(expression(hat(mu)),expression(hat(phi)),"OLS"),lty=c(1,3,2),lwd=c(3,2,3),bty="n")
@

\bibliography{DirichletReg-vig}

\end{document}
